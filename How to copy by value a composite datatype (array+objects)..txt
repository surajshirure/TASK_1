1. Using Object.assign()

The Object.assign() method copies all enumerable own properties from one or more source objects to a target object. It returns the target object. Note this will be a shallow copy.

var a = [1,2,3]

var b = Object.assign([],a)

console.log(a,b) o/p - a = [1,2,3],  b=[1,2,3]

b[2] =80

console.log(a,b) o/p - a = [1,2,3],  b=[1,2,80]

2. Using JSON.parse() and JSON.stringify()

JSON.parse() takes a JSON string and transforms it into a JavaScript object. JSON.stringify() takes a JavaScript object and transforms it into a JSON string.Using JSON.parse() and JSON.stringify() for copy performs deep copy .

var a = [1,2,3]

var b = Json.parse(Json.stringify(a))

console.log(a,b) o/p - a = [1,2,3],  b=[1,2,3]

b[2] =80

console.log(a,b) o/p - a = [1,2,3],  b=[1,2,80]

3. Using Spread

Spread operator allows an iterable to expand in places where 0+ arguments are expected. It is mostly used in the variable array where there is more than 1 values are expected. It allows us the privilege to obtain a list of parameters from an array.Using spread will clone your object. Note this will be a shallow copy.

var a = [1,2,3]

var b = [....a]

console.log(a,b) o/p - a = [1,2,3],  b=[1,2,3]

b[2] =80

console.log(a,b) o/p - a = [1,2,3],  b=[1,2,80]

